openapi: 3.0.0
info:
  title: Cocktail and ingredient API
  version: 0.0.1

servers:
  - url: http://localhost:8080/
    description: Local development server

tags:
  - name: 'ingredients'
    description: 'Ingredient Operations'
  - name: 'cocktails'
    description: 'Cocktail Operations'

paths:
  /ingredients:
    get:
      summary: Return a list of ingredients
      operationId: getAllIngredients
      tags:
        - 'ingredients'
      responses:
        '200':
          description: JSON Array of ingredients
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
    post:
      summary: Create a new ingredient
      operationId: createIngredient
      tags:
        - 'ingredients'
      requestBody:
        description: New ingredient
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
      responses:
        '200':
          description: Creation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
        '400':
          description: Input object malformed
          content:
            application/json:
              schema:
                type: string
                example: Type cannot be null
    patch:
      summary: Update existing ingredient
      operationId: updateIngredient
      tags:
        - 'ingredients'
      requestBody:
        description: Updated ingredient
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
      responses:
        '200':
          description: Update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
        '400':
          description: Input object malformed
          content:
            application/json:
              schema:
                type: string
                example: Type cannot be null
        '404':
          description: Ingredient with ID not found
  /ingredients/{id}:
    get:
      summary: Get a single ingredient
      operationId: getIngredientById
      tags:
        - 'ingredients'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
            example: 10
          required: true
          description: ID of the ingredient to get
      responses:
        '200':
          description: JSON Ingredient
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
        '404':
          description: ID not found
    delete:
      summary: Delete a single ingredient
      operationId: deleteIngredient
      tags:
        - 'ingredients'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int64
            example: 10
          required: true
          description: ID of the ingredient to delete
      responses:
        '204':
          description: Ingredient was deleted successfully
        '404':
          description: ID not found
  /ingredients/bulk:
    post:
      summary: Create multiple new ingredients
      operationId: createBulkIngredients
      tags:
        - 'ingredients'
      requestBody:
        description: New ingredients
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Ingredient'
      responses:
        '200':
          description: All ingredients were created successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredient'
        '400':
          description: One or more ingredients were malformed
          content:
            application/json:
              schema:
                type: string
                example: Type must not be null
  /search:
    get:
      summary: Search for cocktails and ingredients
      operationId: unifiedSearch
      tags:
        - 'ingredients'
        - 'cocktails'
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: Part of the name or description of the ingredient or cocktail, in any language
          required: true
      responses:
        '200':
          description: All search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchResult'

components:
  schemas:
    Ingredient:
      type: object
      required:
        - type
        - names
        - descriptions
      properties:
        id:
          type: integer
          format: int64
          example: 10
        type:
          $ref: '#/components/schemas/IngredientType'
        names:
          type: array
          items:
            $ref: '#/components/schemas/IngredientName'
          minItems: 1
        descriptions:
          type: array
          items:
            $ref: '#/components/schemas/IngredientDescription'
          minItems: 1
        tags:
          type: array
          items:
            $ref: '#/components/schemas/IngredientTag'
    IngredientType:
      type: object
      required:
        - typeNames
      properties:
        id:
          type: integer
          format: int64
          example: 10
        typeNames:
          type: array
          items:
            $ref: '#/components/schemas/LocalizedString'
    IngredientName:
      type: object
      required:
        - names
      properties:
        id:
          type: integer
          format: int64
          example: 20
        names:
          type: array
          items:
            $ref: '#/components/schemas/LocalizedString'
    IngredientDescription:
      type: object
      required:
        - descriptions
      properties:
        id:
          type: integer
          format: int64
          example: 20
        descriptions:
          type: array
          items:
            $ref: '#/components/schemas/LocalizedString'
    IngredientTag:
      type: object
      required:
        - tagNames
      properties:
        id:
          type: integer
          format: int64
          example: 20
        tagNames:
          type: array
          items:
            $ref: '#/components/schemas/LocalizedString'
    SearchResult:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/LocalizedString'
        description:
          $ref: '#/components/schemas/LocalizedString'
    LocalizedString:
      type: object
      properties:
        locale:
          type: string
          example: de-DE
        string:
          type: string
          example: Wodka
