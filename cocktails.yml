openapi: 3.0.3
info:
  title: Cocktail and ingredient API
  version: 0.0.1

servers:
  - url: http://localhost:8080/api
    description: Local development server

tags:
  - name: 'ingredients'
    description: 'Ingredient Operations'
  - name: 'cocktails'
    description: 'Cocktail Operations'
  - name: 'users'
    description: 'User Operations'

paths:
  /users/info:
    get:
      operationId: getUserInfo
      summary: Get information about the currently logged in user
      tags:
        - users
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
  /users/nick:
    post:
      operationId: setNick
      summary: Set the current user's nickname
      tags:
        - users
      responses:
        204:
          description: Success
        409:
          description: Name is taken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              description: The nickname to set
              example: "Jim"
  /ingredients:
    get:
      operationId: getIngredients
      summary: Get all ingredients
      tags:
        - ingredients
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedIngredient'
    post:
      security:
        - oauth2:
            - openid
      operationId: createIngredient
      summary: Create a new ingredient in the database
      tags:
        - ingredients
      requestBody:
        description: The ingredient to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIngredient'
      responses:
        200:
          description: Retrieve the created ingredient
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
        400:
          description: Invalid ingredient data
  /ingredients/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          example: "d61c2b3a-09e3-4305-8f2b-24079ab52e8d"
    get:
      operationId: getIngredientById
      summary: Get a single ingredient by its ID
      tags:
        - ingredients
      responses:
        200:
          description: Found ingredient
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
        404:
          description: Ingredient not found
    post:
      security:
        - oauth2:
            - openid
      operationId: updateIngredient
      summary: Update the ingredient with the specified ID
      tags:
        - ingredients
      requestBody:
        description: The ingredient data to update with
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIngredient'
      responses:
        200:
          description: Updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
        400:
          description: Invalid ingredient data
        404:
          description: Ingredient not found
    delete:
      security:
        - oauth2:
            - openid
      operationId: deleteIngredient
      summary: Delete the specified ingredient
      tags:
        - ingredients
      responses:
        204:
          description: Deleted successfully
        404:
          description: Ingredient not found
  /ingredients/types:
    get:
      operationId: getIngredientTypes
      summary: Get a list of ingredient types on the server
      tags:
        - ingredients
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocalizedIngredientType'
  /ingredients/types/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          example: "d61c2b3a-09e3-4305-8f2b-24079ab52e8d"
    get:
      operationId: getIngredientTypeById
      summary: Get an ingredient type by its ID
      tags:
        - ingredients
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngredientType'
        404:
          description: Ingredient Type not found
  /search:
    get:
      operationId: search
      summary: Search for ingredients and cocktails
      tags:
        - ingredients
        - cocktails
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
            example: rum
          description: The term to search for
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchResult'

components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        implicit:
          scopes:
            openid: Default OpenID scope
            profile: Read profile
            email: Read email
          authorizationUrl: https://dev-991339.okta.com/oauth2/default/v1/authorize

  schemas:
    LocalizedIngredientType:
      description: An ingredient type in a single language
      type: object
      required:
        - type
        - id
        - language
      properties:
        id:
          type: string
          format: uuid
          example: "d61c2b3a-09e3-4305-8f2b-24079ab52e8d"
        language:
          type: string
          example: de
        type:
          type: string
          example: Starker Alkohol
    LocalizedIngredient:
      description: An ingredient in a single language
      type: object
      required:
        - type
        - language
        - id
        - description
        - name
      properties:
        id:
          type: string
          format: uuid
          example: "d61c2b3a-09e3-4305-8f2b-24079ab52e8d"
        type:
          $ref: '#/components/schemas/LocalizedIngredientType'
        language:
          type: string
          example: de
        name:
          type: string
          example: Wei√üer Rum
        description:
          type: string
          example: Ein hochprozentiges Destillat aus Zuckerrohr
    IngredientType:
      description: An ingredient type, with all languages
      type: object
      required:
        - id
        - names
      properties:
        id:
          type: string
          format: uuid
          example: "d61c2b3a-09e3-4305-8f2b-24079ab52e8d"
        names:
          type: array
          items:
            $ref: '#/components/schemas/TranslatedString'
    Ingredient:
      description: An ingredient, with all languages
      type: object
      required:
        - type
        - names
        - id
        - descriptions
        - public
      properties:
        id:
          type: string
          format: uuid
          example: "d61c2b3a-09e3-4305-8f2b-24079ab52e8d"
        type:
          $ref: '#/components/schemas/IngredientType'
        names:
          type: array
          items:
            $ref: '#/components/schemas/TranslatedString'
        descriptions:
          type: array
          items:
            $ref: '#/components/schemas/TranslatedString'
        owner:
          $ref: '#/components/schemas/UserInfo'
        public:
          type: boolean
    CreateIngredient:
      description: An ingredient for creation on the server
      type: object
      required:
        - descriptions
        - names
        - typeId
      properties:
        typeId:
          type: string
          format: uuid
          example: "d61c2b3a-09e3-4305-8f2b-24079ab52e8d"
        names:
          type: array
          items:
            $ref: '#/components/schemas/TranslatedString'
        descriptions:
          type: array
          items:
            $ref: '#/components/schemas/TranslatedString'
    TranslatedString:
      description: A translated string
      type: object
      required:
        - language
        - translation
      properties:
        language:
          type: string
          example: de
        translation:
          type: string
          example: Limettensaft
    SearchResult:
      description: A result of a search for cocktails and ingredients
      type: object
      required:
        - type
        - id
        - name
        - description
      properties:
        id:
          type: string
          format: uuid
          description: The ID of the resource that was found
          example: "d61c2b3a-09e3-4305-8f2b-24079ab52e8d"
        name:
          type: string
        description:
          type: string
        type:
          type: string
          enum: [INGREDIENT, COCKTAIL]
    UserInfo:
      type: object
      required:
        - id
      properties:
        nick:
          type: string
          example: "Jim"
        id:
          type: string
          format: uuid
          example: "d61c2b3a-09e3-4305-8f2b-24079ab52e8d"
